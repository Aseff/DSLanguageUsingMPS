package Board.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptColor = createDescriptorForColor();
  /*package*/ final ConceptDescriptor myConceptColorReference = createDescriptorForColorReference();
  /*package*/ final ConceptDescriptor myConceptField = createDescriptorForField();
  /*package*/ final ConceptDescriptor myConceptShape = createDescriptorForShape();
  /*package*/ final ConceptDescriptor myConceptSquare = createDescriptorForSquare();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptColor, myConceptColorReference, myConceptField, myConceptShape, myConceptSquare);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Color:
        return myConceptColor;
      case LanguageConceptSwitch.ColorReference:
        return myConceptColorReference;
      case LanguageConceptSwitch.Field:
        return myConceptField;
      case LanguageConceptSwitch.Shape:
        return myConceptShape;
      case LanguageConceptSwitch.Square:
        return myConceptSquare;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForColor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Board", "Color", 0x2d064a06718f4b44L, 0x8bef870f5b7946beL, 0x65da13cf7add2c5cL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:8e2745a5-63e4-4864-ae0e-158949e5762f(Board.structure)/7339200324594117724");
    b.version(2);
    b.alias("color");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColorReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Board", "ColorReference", 0x2d064a06718f4b44L, 0x8bef870f5b7946beL, 0x7d7d4e1b80319587L);
    b.class_(false, false, false);
    b.origin("r:8e2745a5-63e4-4864-ae0e-158949e5762f(Board.structure)/9042469506851640711");
    b.version(2);
    b.associate("target", 0x7d7d4e1b80319588L).target(0x2d064a06718f4b44L, 0x8bef870f5b7946beL, 0x65da13cf7add2c5cL).optional(false).origin("9042469506851640712").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForField() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Board", "Field", 0x2d064a06718f4b44L, 0x8bef870f5b7946beL, 0x3d3dcf8ac84cf074L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:8e2745a5-63e4-4864-ae0e-158949e5762f(Board.structure)/4412911404865876084");
    b.version(2);
    b.aggregate("shape", 0x3d3dcf8ac84eb68fL).target(0x2d064a06718f4b44L, 0x8bef870f5b7946beL, 0x3d3dcf8ac84f55b1L).optional(true).ordered(true).multiple(true).origin("4412911404865992335").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShape() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Board", "Shape", 0x2d064a06718f4b44L, 0x8bef870f5b7946beL, 0x3d3dcf8ac84f55b1L);
    b.class_(false, true, false);
    b.origin("r:8e2745a5-63e4-4864-ae0e-158949e5762f(Board.structure)/4412911404866033073");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSquare() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Board", "Square", 0x2d064a06718f4b44L, 0x8bef870f5b7946beL, 0x3440514ce984307dL);
    b.class_(false, true, false);
    b.super_("Board.structure.Shape", 0x2d064a06718f4b44L, 0x8bef870f5b7946beL, 0x3d3dcf8ac84f55b1L);
    b.origin("r:8e2745a5-63e4-4864-ae0e-158949e5762f(Board.structure)/3765098679258853501");
    b.version(2);
    b.property("rows", 0x3440514ce984307eL).type(PrimitiveTypeId.INTEGER).origin("3765098679258853502").done();
    b.property("columns", 0x3440514ce9843080L).type(PrimitiveTypeId.INTEGER).origin("3765098679258853504").done();
    b.alias("square");
    return b.create();
  }
}
